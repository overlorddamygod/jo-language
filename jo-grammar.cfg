program -> (statement)* eof

declaration -> funDecl | statement

funDecl -> "fn" function
function -> identifier "(" parameters? ")" block
parameters -> identifier ( "," identifier )*


statement -> (exprStmt | ifStatement | forStatement | returnStmt | block) ";"

exprStmt -> expression ";"
ifStatement -> "if" "(" expression ")" block "else" block
forStatement -> "for" "(" assignment ";" expression ";" expression ")" block
returnStmt -> "return" expression? ";"
// TODO: ADD BLOCK STATEMENT
block -> "{" (declaration)* "}"


expression -> assignment
assignment -> identifier "=" assignment | logic_or
logic_or -> logic_and ( "or" logic_and )* 
logic_and -> equality ( "and" equality )* 
equality -> comparison ( ( "!=" | "==" ) comparison )* 
comparison -> term ( ( ">" | ">=" | "<" | "<=" ) term )* 
term -> factor ( ( "-" | "+" ) factor )*
factor -> unary ( ( "/" | "*" | "%") unary )*
unary -> ( "!" | "-" | "++" || "--" ) unary | call
call -> primary ( "(" arguments? ")" | "." identifier )*
primary -> number | string | identifier | boolean | "(" expression ")"

arguments -> expression ( "," expression )*
boolean -> "true" | "false"