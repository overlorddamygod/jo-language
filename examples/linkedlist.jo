struct Node {
    fn init(data, prev) {
        self.data = data;
        self.next = null;
        self.prev = prev;
    }
}

struct LL {
    fn init() {
        self.head = null;
    }
    fn appendFirst(data) {
        if (self.head == null) {
            self.head = Node(data, null);
        } else {
            let temp = self.head;
            self.head = Node(data, temp);
            self.head.next = temp;
        }
    }
    fn pushlast(data) {
        if (self.head == null) {
            self.head = Node(data, "null");
        } else {
            let temp = self.head;
            while (temp.next != null ) {
                temp = temp.next;
            }
            temp.next = Node(data, temp);
        }
    }
    fn get(index) {
        if (self.head == null) {
            return null;
        }

        let temp = self.head;
        let i = 0;

        while (temp.next != null) {
            if (i == index) {
                print("SAD", temp.data);
                return temp.data;
                break;
            }
            temp = temp.next;
            i = i + 1;
        }
        if ( i == index) {
            return temp.data;
        }
    }
    fn printdata() {
        let temp = self.head;
        if (temp == null) {
            print("EMPTY");
        } else {
            while (temp.type() == "Node") {
                print(temp.data);
                temp = temp.next;
            }
        }
    }
}

let ll = LL();
print(ll.get(0));

ll.pushlast(2);
ll.appendFirst(69);
ll.pushlast(3);

ll.printdata();

print(ll.get(3));